[{"D:\\coding\\Phase-5-Project\\food-truck-frontend\\src\\index.js":"1","D:\\coding\\Phase-5-Project\\food-truck-frontend\\src\\App.js":"2","D:\\coding\\Phase-5-Project\\food-truck-frontend\\src\\reportWebVitals.js":"3","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\index.js":"4","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\App.js":"5","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\reportWebVitals.js":"6","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\MainPage.js":"7","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\LogIn.js":"8","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\CreateAccount.js":"9","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\FrontPage.js":"10","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\FrontMap.js":"11","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\TruckCardContainer.js":"12","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\TruckCard.js":"13","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\TruckPage.js":"14","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\InfoMap.js":"15","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\ReviewForm.js":"16","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\config.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":263,"mtime":1621355707175,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":8048,"mtime":1623095711426,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1163,"mtime":1623095711451,"results":"26","hashOfConfig":"23"},{"size":485,"mtime":1623095711428,"results":"27","hashOfConfig":"23"},{"size":1356,"mtime":1623095711427,"results":"28","hashOfConfig":"23"},{"size":2069,"mtime":1623095711450,"results":"29","hashOfConfig":"23"},{"size":2030,"mtime":1623684604888,"results":"30","hashOfConfig":"23"},{"size":531,"mtime":1623095711455,"results":"31","hashOfConfig":"23"},{"size":2696,"mtime":1623095711450,"results":"32","hashOfConfig":"23"},{"size":3223,"mtime":1623358722020,"results":"33","hashOfConfig":"23"},{"size":1791,"mtime":1623684612422,"results":"34","hashOfConfig":"23"},{"size":1056,"mtime":1623358616976,"results":"35","hashOfConfig":"23"},{"size":91,"mtime":1623684586657,"results":"36","hashOfConfig":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1gby6wo",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"v6ra6w",{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\coding\\Phase-5-Project\\food-truck-frontend\\src\\index.js",[],["80","81"],"D:\\coding\\Phase-5-Project\\food-truck-frontend\\src\\App.js",["82"],"import logo from './logo.svg';\nimport './App.css';\nimport Map from './Components/Map.js';\nimport React from 'react';\n\nclass App extends React.Component {\n  render() {\n  return (\n    <div className=\"App\">\n        <Map />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","D:\\coding\\Phase-5-Project\\food-truck-frontend\\src\\reportWebVitals.js",[],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\index.js",[],["83","84"],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\App.js",["85","86","87"],"import './App.css';\r\nimport MainPage from './Containers/MainPage'\r\nimport React from 'react';\r\nimport FrontPage from './Containers/FrontPage'\r\nimport TruckPage from './Containers/TruckPage'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  BrowserRouter,\r\n  Redirect,\r\n\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\nstate = {\r\n  trucksArray: [],\r\n  currentEater: {},\r\n  selectedTruck: {},\r\n  searchTerm: \"\",\r\n  reviewError: \"\",\r\n  loginError: \"\",\r\n  createError: \"\",\r\n  createSuccess: \"\"\r\n}\r\n\r\nupdateReviewError = (data) => {\r\n  this.setState({\r\n    reviewError: data\r\n  })\r\n}\r\n\r\nupdateLoginError = (data) => {\r\n  this.setState({\r\n    loginError: data\r\n  })\r\n}\r\n\r\nupdateCreateError = (data) => {\r\n  this.setState({\r\n    createError: data\r\n  })\r\n}\r\n\r\ncomponentDidMount() {\r\n  console.log('mounted')\r\n  this.getTrucks()\r\n  if (localStorage.token != null) {\r\n    this.jwtAuth()\r\n  }\r\n  \r\n  // this.setUser(this.state.currentEater)\r\n}\r\n\r\njwtAuth = () => {\r\n  fetch('http://localhost:3000/api/v1/token',{\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\":\"application/json\",\r\n      \"Accept\":\"application/json\",\r\n      \"Authorization\": `Bearer ${localStorage.token}`\r\n    },\r\n    body: JSON.stringify(localStorage.token)\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => this.setState({\r\n    currentEater: data\r\n  }))\r\n}\r\n\r\nupdateFavorites = (data) => {\r\n  let eater = this.state.currentEater\r\n  eater.favorites = [...eater.favorites, data]\r\n  this.setState({\r\n    currentEater: eater\r\n  })\r\n}\r\n\r\nfavorite = (truck) => {\r\n  let eater = this.state.currentEater\r\n  eater.trucks = [...eater.trucks, truck]\r\n  this.setState({\r\n    currentEater: eater\r\n  })\r\n  this.getTrucks()\r\n  let newFavorite = {\r\n    eater_id: this.state.currentEater.id,\r\n    truck_id: truck.id\r\n  }\r\n  let reqPackage = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    },\r\n    body: JSON.stringify(newFavorite)\r\n  }\r\n  console.log(reqPackage)\r\n  fetch('http://localhost:3000/api/v1/favorites', reqPackage)\r\n  .then(res => res.json())\r\n  .then(data => this.updateFavorites(data))\r\n}\r\n\r\nunfavorite = (truck) => {\r\n  let eater = this.state.currentEater\r\n  let b = eater.favorites.filter(object => object.truck_id === truck.id)[0]\r\n  let newArray = eater.favorites.filter(favorite => {\r\n    return favorite.truck_id != truck.id;\r\n  })\r\n  eater.favorites = newArray\r\n  this.setState({\r\n    currentEater: eater\r\n  })\r\n  fetch(`http://localhost:3000/api/v1/favorites/${b.id}`, {\r\n    method: \"DELETE\",\r\n  })\r\n}\r\n\r\nsetUser = (data) => {\r\n  let obj = JSON.parse(data)\r\n  this.setState({\r\n    currentEater: obj,\r\n  })\r\n  console.log(this.state.currentEater)\r\n}\r\n\r\nsetTrucks = (data) => {\r\n  this.setState({\r\n    trucksArray: data\r\n  })\r\n}\r\ngetTrucks = () => {\r\n  fetch('http://localhost:3000/api/v1/trucks', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => this.setTrucks(data))\r\n}\r\n\r\nhandleLogIn = (e) => {\r\n  console.log('login hit')\r\n  e.preventDefault()\r\n  let eater = {\r\n    username: e.target[0].value,\r\n    password: e.target[1].value\r\n  }\r\n\r\n  let reqPackage = {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"\",\r\n    },\r\n    body: JSON.stringify(eater)\r\n  }\r\n\r\n  fetch('http://localhost:3000/api/v1/login', reqPackage)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    if (data.error===\"Incorrect username or password\") {\r\n      this.updateLoginError(data.error)\r\n    } else {\r\n      localStorage.token = data.token\r\n      this.setUser(data.eater)\r\n    }\r\n    // this.getTrucks()\r\n  })\r\n}\r\n\r\ninfo = (truck) => {\r\n  console.log('clicked')\r\n  this.setState({\r\n    selectedTruck: truck\r\n  })\r\n  return <Link to='/info'/>\r\n}\r\n\r\nlogout = () => {\r\n  localStorage.clear()\r\n  window.location.reload()\r\n}\r\n\r\naddEater = (newEater) => {\r\n  let reqPackage = {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\",\r\n      // 'Authorization': `Bearer ${localStorage.token}`\r\n    },\r\n    body: JSON.stringify(newEater)\r\n  }\r\n  fetch('http://localhost:3000/api/v1/eaters', reqPackage)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    if (data.error=== \"Username already in use\") {\r\n      this.updateCreateError(data.error)\r\n    } else {\r\n      this.setState({\r\n        createSuccess: \"Account created! Please Log In\"\r\n      })\r\n    }\r\n\r\n})\r\n}\r\n\r\nreviewSubmit = (fields, truck) => {\r\n  let rating = parseInt(fields.rating)\r\n  let newReview = {\r\n    eater_id: this.state.currentEater.id,\r\n    truck_id: truck.id,\r\n    rating: rating,\r\n    body: fields.body\r\n  }\r\n  let reqPackage = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    },\r\n    body: JSON.stringify(newReview)\r\n  }\r\n  fetch('http://localhost:3000/api/v1/reviews', reqPackage)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    console.log(data)\r\n    if (data.error===\"Rating must be whole number between 1 and 5\") {\r\n      this.updateReviewError(data.error)\r\n    } else {\r\n      this.updateReviews(data)\r\n    }\r\n  })\r\n}\r\n\r\nupdateReviews = (data) => {\r\n  let eater = this.state.currentEater\r\n  eater.reviews = [...eater.reviews, data]\r\n  this.setState({\r\n    currentEater: eater,\r\n    reviewError: \"\"\r\n  })\r\n  this.getTrucks()\r\n}\r\n\r\nhandleSearchTerm = (e) => {\r\n  this.setState({\r\n    searchTerm: e.target.value\r\n  })\r\n}\r\n\r\nsortByRating= (e) => {\r\n  let sortedTrucks = this.state.trucksArray.sort((a,b) => b.average_rating - a.average_rating)\r\n  this.setState({\r\n    trucksArray: sortedTrucks\r\n  })\r\n}\r\n\r\nfilterByFavorite = (e) => {\r\n  let b = this.state.currentEater.favorites.map(favorite => favorite.truck_id)\r\n  let filteredTrucks = this.state.trucksArray.filter(truck => b.includes(truck.id))\r\nthis.setState({\r\n  trucksArray: filteredTrucks\r\n})\r\n}\r\n\r\nfilterByType = (e) => {\r\n  e.preventDefault()\r\n  if (e.target.value === \"Show All\") {\r\n    this.getTrucks()\r\n  } else {\r\n    // this.getTrucks()\r\n    let filteredTrucks = this.state.trucksArray.filter(truck => truck.type_of_food === e.target.value)\r\n    this.setState({\r\n      trucksArray: filteredTrucks\r\n    })\r\n  }\r\n}\r\n\r\nresetFilters = () => {\r\n  window.location.reload()\r\n}\r\n  render() {\r\n    let filteredTrucks = this.state.trucksArray.filter(truck => truck.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n    let username\r\n    if (this.state.currentEater != {}) {\r\n      username = this.state.currentEater.username\r\n    }\r\n  return (\r\n    <BrowserRouter>\r\n<div className=\"center\">\r\n  <h1>Welcome {username}</h1>\r\n   {localStorage.token ? <button onClick={() =>this.logout()}>Log Out </button>: <h1>Login</h1>}\r\n   </div>\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n      {localStorage.token ? <Redirect to=\"/welcome\"/> : <MainPage handleLogIn={this.handleLogIn} addEater={this.addEater} error={this.state.loginError} createError={this.state.createError} createSuccess={this.state.createSuccess}/>}\r\n      </Route>\r\n      <Route exact path='/welcome'>\r\n      {localStorage.token ? <FrontPage trucks={filteredTrucks} eater={this.state.currentEater} favorite={this.favorite} unfavorite={this.unfavorite} info={this.info} search={this.handleSearchTerm} sortByRating={this.sortByRating} filterByType={this.filterByType} filterByFavorite={this.filterByFavorite} reset={this.resetFilters}/> : <Redirect to=\"/\"/>}\r\n      </Route>\r\n      <Route exact path='/info'>\r\n      {localStorage.token ? <TruckPage onSubmit={this.reviewSubmit} eater={this.state.currentEater} trucks={this.state.trucksArray} error={this.state.reviewError}/>: <Redirect to=\"/\"/>}\r\n      </Route>\r\n      {/* <Route path='/:handle' component={TruckPage}/> */}\r\n    </Switch>\r\n    </BrowserRouter>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\reportWebVitals.js",[],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\MainPage.js",[],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\LogIn.js",["88"],"const LogIn = props => {\r\n    let error\r\n    if (props.error != \"\") {\r\n        error = props.error\r\n    }\r\n    return(\r\n        <div className = \"center\">\r\n        <h4 className=\"error\">{error}</h4>\r\n    <form onSubmit={props.handleLogIn}>\r\n        <label>Username</label>\r\n        <input type=\"text\"/>\r\n        <br/>\r\n        <label>Password</label>\r\n        <input type=\"password\"/>\r\n        <br/>\r\n        <input type=\"submit\"/>\r\n    </form>\r\n    </div>)\r\n}\r\n\r\nexport default LogIn;","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\CreateAccount.js",["89","90"],"import React, { Component } from 'react';\r\n\r\nexport default class CreateAccount extends Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let newEater = {\r\n            username: e.target[0].value,\r\n            password: e.target[1].value\r\n        }\r\n        this.props.addEater(newEater)\r\n    }\r\n\r\n    // changeHandler = (e) => {\r\n    //     let {name, value} = e.target\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     })\r\n    // }\r\n\r\n    render(){\r\n        let error\r\n        if (this.props.error!={}) {\r\n            error = this.props.error\r\n        }\r\n        let success\r\n        if (this.props.success != \"\") {\r\n            success = this.props.success\r\n        }\r\n        return (\r\n            <div>\r\n            <h1>Create Account</h1>\r\n            <h4 className= \"error\">{error}</h4>\r\n            <h4 className= \"success\">{success}</h4>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <p>Username</p>\r\n              <input type='text' username='username' placeholder='Enter Username'/> <br/> <br/>\r\n              <p>Password</p>\r\n              <input type='password' name='password' placeholder='Enter your password'/> <br/> <br/>\r\n              <input type=\"submit\" name=\"submit\" value=\"Create Account\" className=\"submit\"/>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\FrontPage.js",[],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\FrontMap.js",["91","92"],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\TruckCardContainer.js",[],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\TruckCard.js",["93"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport {\r\n    Redirect,\r\n    withRouter\r\n  } from \"react-router-dom\";\r\n\r\n\r\nclass TruckCard extends Component {\r\n\r\n    goToInfo = (truck) => {\r\n        localStorage.setItem('selectedTruck', JSON.stringify(truck));\r\n        this.props.history.push('/info')\r\n    }\r\n\r\n\r\nlink = () =>{\r\n            return <Redirect to=\"/info\"/>\r\n        }\r\n\r\n    render() {\r\n        let b = this.props.eater.favorites.map(favorite => favorite.truck_id)\r\n        console.log(this.props.truck)\r\n        let averageRating\r\n        if (this.props.truck.average_rating === \"No ratings\"){\r\n            averageRating = <div><span class=\"stars-container stars-0\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 1) {\r\n            averageRating = <div><span class=\"stars-container stars-20\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 2) {\r\n            averageRating = <div><span class=\"stars-container stars-40\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 3) {\r\n            averageRating = <div><span class=\"stars-container stars-60\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 4) {\r\n            averageRating = <div><span class=\"stars-container stars-80\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 5) {\r\n            averageRating = <div><span class=\"stars-container stars-100\">★★★★★</span></div>\r\n        }\r\n        return(\r\n            <div className = \"media\">\r\n                <img className= \"media-image\" src={this.props.truck.profile_picture} onClick={()=>this.goToInfo(this.props.truck)}/>\r\n                <div className= \"media-body\">\r\n                <h2>{this.props.truck.name}\r\n                <br/>\r\n                {b.includes(this.props.truck.id) ?\r\n                <div class=\"heart-btn\">\r\n                    <div class=\"content\">\r\n                        <span class=\"heart-red\" onClick={()=>this.props.unfavorite(this.props.truck)}></span>\r\n                </div>\r\n                </div>:\r\n                <div class=\"heart-btn\">\r\n                    <div class=\"content\">\r\n                        <span class= \"heart\" onClick={()=>this.props.favorite(this.props.truck)}></span>\r\n                </div>\r\n                </div>}\r\n                </h2>\r\n                <h3>Average Rating: {averageRating}</h3>\r\n                <h4>Type of Food: {this.props.truck.type_of_food}\r\n                <br/>\r\n                </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TruckCard);","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Containers\\TruckPage.js",["94"],"import React, { Component } from 'react';\r\nimport InfoMap from '../Components/InfoMap';\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Switch,\r\n//     Route,\r\n//     Link,\r\n//     BrowserRouter,\r\n//     Redirect,\r\n//     useHistory,\r\n//     withRouter\r\n//   } from \"react-router-dom\";\r\nimport ReviewForm from '../Components/ReviewForm';\r\n\r\nclass TruckPage extends Component {\r\n\r\n    state = {\r\n        show: false\r\n    }\r\n\r\n    toggleReview = () =>{\r\n        this.setState({ show: !this.state.show})\r\n    }\r\n\r\n    render() {\r\n        let selectedTruckString = localStorage.getItem('selectedTruck')\r\n        let selectedTruck = JSON.parse(selectedTruckString)\r\n        let b = this.props.trucks.filter(truck => truck.id === selectedTruck.id)[0]\r\n        console.log(b)\r\n        return(\r\n            <div className=\"bg\">\r\n            <div className=\"container\">\r\n                <h1 className=\"front-header\">Austin Food Trucks</h1>\r\n                <div className=\"center\">\r\n                {/* <Link to='/welcome'>Back to Home Page</Link> */}\r\n                <div className= \"main clearfix\">\r\n                <h1>{selectedTruck.name}</h1>\r\n                <img className= \"image-info-page\" src={selectedTruck.profile_picture}/>\r\n                </div>\r\n                <InfoMap truck={selectedTruck}/>\r\n                <div className= \"main clearfix\">\r\n                <h2>Type of Food: {selectedTruck.type_of_food}</h2>\r\n                <h2>Hours of Operation: {selectedTruck.hours_of_operation}</h2>\r\n                <h3>Reviews</h3>\r\n                    {b.reviews.map(review =>\r\n                        <li>{review.eater.username} says: {review.body}\r\n                        <br/>\r\n                        {/* {let averageRating\r\n        if (this.props.truck.average_rating === \"No ratings\"){\r\n            averageRating = <div><span class=\"stars-container stars-0\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 1) {\r\n            averageRating = <div><span class=\"stars-container stars-20\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 2) {\r\n            averageRating = <div><span class=\"stars-container stars-40\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 3) {\r\n            averageRating = <div><span class=\"stars-container stars-60\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 4) {\r\n            averageRating = <div><span class=\"stars-container stars-80\">★★★★★</span></div>\r\n        } else if (this.props.truck.average_rating === 5) {\r\n            averageRating = <div><span class=\"stars-container stars-100\">★★★★★</span></div>\r\n        }} */}\r\n                            Rating:{review.rating}</li>)}\r\n                </div>\r\n\r\n                <div className=\"center\">\r\n                {this.state.show===false ? \r\n                <button onClick={this.toggleReview}>Write a Review</button>:\r\n                <ReviewForm onSubmit={this.props.onSubmit} truck= {selectedTruck} error={this.props.error}/>}        \r\n                </div>\r\n            </div>\r\n            </div>\r\n</div>\r\n         ) }\r\n}\r\n\r\nexport default TruckPage","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\InfoMap.js",[],"D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\Components\\ReviewForm.js",["95"],"import React from \"react\";\r\n\r\nclass Review extends React.Component {\r\n    state = {\r\n        rating:'',\r\n        body: ''\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state, this.props.truck)\r\n    }\r\n    render() {\r\n        let error\r\n        if (this.props.error!={}) {\r\n            error = this.props.error\r\n        }\r\n        return(\r\n            <div className=\"main clearfix\">\r\n            <div className=\"center\">\r\n                <h4 className=\"error\">{error}</h4>\r\n            <form>\r\n                <input placeholder='Enter a rating 1-5' value={this.state.rating} onChange={e => this.setState({ rating: e.target.value })}/>\r\n                <br/>\r\n                <input placeholder='Enter review description' value={this.state.body} onChange={e => this.setState({ body: e.target.value })}/>\r\n                <br/>\r\n                <button onClick={(e)=> this.onSubmit(e)}>Submit</button>\r\n            </form>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Review;","D:\\Coding\\Phase-5-Project\\food-truck-frontend\\src\\config.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":12},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","replacedBy":"106"},{"ruleId":"101","severity":1,"message":"107","line":8,"column":20,"nodeType":"103","messageId":"104","endLine":8,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":112,"column":30,"nodeType":"110","messageId":"111","endLine":112,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":295,"column":33,"nodeType":"110","messageId":"111","endLine":295,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":3,"column":21,"nodeType":"110","messageId":"111","endLine":3,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":22,"column":29,"nodeType":"110","messageId":"111","endLine":22,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":26,"column":32,"nodeType":"110","messageId":"111","endLine":26,"endColumn":34},{"ruleId":"101","severity":1,"message":"112","line":4,"column":3,"nodeType":"103","messageId":"104","endLine":4,"endColumn":11},{"ruleId":"101","severity":1,"message":"113","line":5,"column":3,"nodeType":"103","messageId":"104","endLine":5,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":41,"column":17,"nodeType":"116","endLine":41,"endColumn":133},{"ruleId":"114","severity":1,"message":"115","line":38,"column":17,"nodeType":"116","endLine":38,"endColumn":88},{"ruleId":"108","severity":1,"message":"109","line":15,"column":29,"nodeType":"110","messageId":"111","endLine":15,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":1,"column":9,"nodeType":"103","messageId":"119","endLine":1,"endColumn":15},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["120"],["121"],"'Router' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-use-before-define","'config' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation"]
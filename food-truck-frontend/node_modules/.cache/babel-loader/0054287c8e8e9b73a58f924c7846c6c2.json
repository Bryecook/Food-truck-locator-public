{"ast":null,"code":"import React from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api'; // const containerStyle = {\n//   width: '400px',\n//   height: '400px'\n// };\n// const center = {\n//   lat: -3.745,\n//   lng: -38.523\n// };\n// let myLatLng = { lat: -25.363, lng: 131.044};\n// function MyComponent() {\n//   const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyCfyRkCpOt9iXZwlKa4dOTqLnGuZHDPbkc\"\n//   })\n//   const [map, setMap] = React.useState(null)\n//   const onLoad = React.useCallback(function callback(map) {\n//     const bounds = new window.google.maps.LatLngBounds();\n//     map.fitBounds(bounds);\n//     setMap(map)\n//   }, [])\n//   const onUnmount = React.useCallback(function callback(map) {\n//     setMap(null)\n//   }, [])\n//   const setMarker = (e) => {\n//     console.log(e.latLng.lat(), e.latLng.lng())\n//     myLatLng = { lat: e.latLng.lat(), lng: e.latLng.lng()}\n//   }\n//   return isLoaded ? (\n//       <GoogleMap\n//         mapContainerStyle={containerStyle}\n//         center={center}\n//         zoom={10}\n//         onLoad={onLoad}\n//         onUnmount={onUnmount}\n//         onClick={setMarker}\n//       >\n//         <Marker\n//         position= {myLatLng}\n//         draggable= {true}\n//         />\n//         { /* Child components, such as markers, info windows, etc. */ \n//         // new google.maps.Marker({\n//         //   position: myLatLng,\n//         //   map,\n//         //   title: \"Hello World\"\n//         // })\n//         }\n//         <></>\n//       </GoogleMap>\n//   ) : <></>\n// }\n// export default React.memo(MyComponent)","map":{"version":3,"sources":["D:/coding/Phase-5-Project/food-truck-frontend/src/Components/Map.js"],"names":["React","GoogleMap","useJsApiLoader","Marker"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,QAAkD,wBAAlD,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\n\r\n// const containerStyle = {\r\n//   width: '400px',\r\n//   height: '400px'\r\n// };\r\n\r\n// const center = {\r\n//   lat: -3.745,\r\n//   lng: -38.523\r\n// };\r\n\r\n// let myLatLng = { lat: -25.363, lng: 131.044};\r\n\r\n\r\n// function MyComponent() {\r\n//   const { isLoaded } = useJsApiLoader({\r\n//     id: 'google-map-script',\r\n//     googleMapsApiKey: \"AIzaSyCfyRkCpOt9iXZwlKa4dOTqLnGuZHDPbkc\"\r\n//   })\r\n\r\n//   const [map, setMap] = React.useState(null)\r\n\r\n//   const onLoad = React.useCallback(function callback(map) {\r\n//     const bounds = new window.google.maps.LatLngBounds();\r\n//     map.fitBounds(bounds);\r\n//     setMap(map)\r\n//   }, [])\r\n\r\n//   const onUnmount = React.useCallback(function callback(map) {\r\n//     setMap(null)\r\n//   }, [])\r\n\r\n//   const setMarker = (e) => {\r\n//     console.log(e.latLng.lat(), e.latLng.lng())\r\n//     myLatLng = { lat: e.latLng.lat(), lng: e.latLng.lng()}\r\n//   }\r\n\r\n//   return isLoaded ? (\r\n//       <GoogleMap\r\n//         mapContainerStyle={containerStyle}\r\n//         center={center}\r\n//         zoom={10}\r\n//         onLoad={onLoad}\r\n//         onUnmount={onUnmount}\r\n//         onClick={setMarker}\r\n//       >\r\n//         <Marker\r\n//         position= {myLatLng}\r\n//         draggable= {true}\r\n//         />\r\n//         { /* Child components, such as markers, info windows, etc. */ \r\n//         // new google.maps.Marker({\r\n//         //   position: myLatLng,\r\n//         //   map,\r\n//         //   title: \"Hello World\"\r\n//         // })\r\n//         }\r\n//         <></>\r\n//       </GoogleMap>\r\n//   ) : <></>\r\n// }\r\n\r\n// export default React.memo(MyComponent)"]},"metadata":{},"sourceType":"module"}
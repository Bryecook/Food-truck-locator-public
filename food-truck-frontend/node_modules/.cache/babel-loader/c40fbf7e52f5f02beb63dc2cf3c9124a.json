{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Phase-5-Project\\\\food-truck-frontend\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Map from './Components/Map.js';\nimport MainPage from './Containers/MainPage';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, BrowserRouter, Redirect } from \"react-router-dom\"; // import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   BrowserRouter,\n//   Redirect\n// } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trucksArray: []\n    };\n\n    this.getTrucks = () => {\n      fetch('http://localhost:3000/api/v1/trucks', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n      }).then(res => res.json()).then(data => this.setState({\n        trucksArray: data\n      }));\n      console.log(this.state.trucksArray);\n    };\n\n    this.handleLogIn = e => {\n      console.log('login hit');\n      e.preventDefault();\n      let eater = {\n        username: e.target[0].value,\n        password: e.target[1].value\n      };\n      let reqPackage = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"\"\n        },\n        body: JSON.stringify(eater)\n      };\n      fetch('http://localhost:3000/api/v1/login', reqPackage).then(res => res.json()).then(data => {\n        localStorage.token = data.token;\n        this.getTrucks();\n      });\n    };\n\n    this.addEater = newEater => {\n      console.log(newEater);\n      let reqPackage = {\n        method: 'POST',\n        header: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(newEater)\n      };\n      fetch('http://localhost:3000/api/v1/eaters', reqPackage).then(res => res.json()).then(data => console.log(data));\n    };\n  }\n\n  componentDidMount() {\n    console.log('mounted');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(MainPage, {\n            handleLogIn: this.handleLogIn,\n            addEater: this.addEater\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Coding/Phase-5-Project/food-truck-frontend/src/App.js"],"names":["Map","MainPage","React","BrowserRouter","Router","Switch","Route","Link","Redirect","App","Component","state","trucksArray","getTrucks","fetch","method","headers","localStorage","token","then","res","json","data","setState","console","log","handleLogIn","e","preventDefault","eater","username","target","value","password","reqPackage","body","JSON","stringify","addEater","newEater","header","componentDidMount","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Map from './Components/Map.js';\nimport MainPage from './Containers/MainPage'\nimport React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  BrowserRouter,\n  Redirect\n} from \"react-router-dom\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   BrowserRouter,\n//   Redirect\n// } from \"react-router-dom\";\n\nclass App extends React.Component {\n\nstate = {\n  trucksArray: []\n}\n\n\ncomponentDidMount() {\n  console.log('mounted')\n}\n\ngetTrucks = () => {\n  fetch('http://localhost:3000/api/v1/trucks', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${localStorage.token}`\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setState({\n    trucksArray: data\n  }))\n  console.log(this.state.trucksArray)\n}\n\nhandleLogIn = (e) => {\n  console.log('login hit')\n  e.preventDefault()\n  let eater = {\n    username: e.target[0].value,\n    password: e.target[1].value\n  }\n\n  let reqPackage = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"\",\n    },\n    body: JSON.stringify(eater)\n  }\n\n  fetch('http://localhost:3000/api/v1/login', reqPackage)\n  .then(res => res.json())\n  .then(data => {\n    localStorage.token = data.token\n    this.getTrucks()\n  })\n}\n\naddEater = (newEater) => {\n  console.log(newEater)\n  let reqPackage = {\n    method: 'POST',\n    header: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n    },\n    body: JSON.stringify(newEater)\n  }\n  fetch('http://localhost:3000/api/v1/eaters', reqPackage)\n  .then(res => res.json())\n  .then(data => console.log(data))\n}\n\n  render() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\">\n      <MainPage handleLogIn={this.handleLogIn} addEater={this.addEater}/>\n      </Route>\n      <Route exact path='/welcome'>\n\n      </Route>\n    </Switch>\n    <div className=\"App\">\n        \n    </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
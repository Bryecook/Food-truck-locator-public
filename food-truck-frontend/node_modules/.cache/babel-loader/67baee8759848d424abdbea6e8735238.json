{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Phase-5-Project\\\\food-truck-frontend\\\\src\\\\App.js\";\nimport './App.css';\nimport MainPage from './Containers/MainPage';\nimport React from 'react';\nimport FrontPage from './Containers/FrontPage';\nimport TruckPage from './Containers/TruckPage';\nimport { BrowserRouter as Router, Switch, Route, Link, BrowserRouter, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trucksArray: [],\n      currentEater: {},\n      selectedTruck: {},\n      searchTerm: \"\",\n      reviewError: \"\",\n      loginError: \"\"\n    };\n\n    this.updateReviewError = data => {\n      this.setState({\n        reviewError: data\n      });\n      console.log(data);\n    };\n\n    this.updateLoginError = data => {\n      this.setState({\n        loginError: data\n      });\n      console.log(data);\n    };\n\n    this.jwtAuth = () => {\n      fetch('http://localhost:3000/api/v1/token', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify(localStorage.token)\n      }).then(res => res.json()).then(data => this.setState({\n        currentEater: data\n      }));\n    };\n\n    this.updateFavorites = data => {\n      let eater = this.state.currentEater;\n      eater.favorites = [...eater.favorites, data];\n      this.setState({\n        currentEater: eater\n      });\n    };\n\n    this.favorite = truck => {\n      let eater = this.state.currentEater;\n      eater.trucks = [...eater.trucks, truck];\n      this.setState({\n        currentEater: eater\n      });\n      this.getTrucks();\n      let newFavorite = {\n        eater_id: this.state.currentEater.id,\n        truck_id: truck.id\n      };\n      let reqPackage = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(newFavorite)\n      };\n      console.log(reqPackage);\n      fetch('http://localhost:3000/api/v1/favorites', reqPackage).then(res => res.json()).then(data => this.updateFavorites(data));\n    };\n\n    this.unfavorite = truck => {\n      let eater = this.state.currentEater;\n      let b = eater.favorites.filter(object => object.truck_id === truck.id)[0];\n      let newArray = eater.favorites.filter(favorite => {\n        return favorite.truck_id != truck.id;\n      });\n      eater.favorites = newArray;\n      this.setState({\n        currentEater: eater\n      });\n      fetch(`http://localhost:3000/api/v1/favorites/${b.id}`, {\n        method: \"DELETE\"\n      });\n    };\n\n    this.setUser = data => {\n      let obj = JSON.parse(data);\n      this.setState({\n        currentEater: obj\n      });\n      console.log(this.state.currentEater);\n    };\n\n    this.setTrucks = data => {\n      this.setState({\n        trucksArray: data\n      });\n    };\n\n    this.getTrucks = () => {\n      fetch('http://localhost:3000/api/v1/trucks', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n      }).then(res => res.json()).then(data => this.setTrucks(data));\n    };\n\n    this.handleLogIn = e => {\n      console.log('login hit');\n      e.preventDefault();\n      let eater = {\n        username: e.target[0].value,\n        password: e.target[1].value\n      };\n      let reqPackage = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"\"\n        },\n        body: JSON.stringify(eater)\n      };\n      fetch('http://localhost:3000/api/v1/login', reqPackage).then(res => res.json()).then(data => {\n        if (data.error === \"Incorrect username or password\") {\n          this.updateReviewError(data.error);\n        } else {\n          this.updateReviews(data);\n        }\n\n        localStorage.token = data.token;\n        this.setUser(data.eater); // this.getTrucks()\n      });\n    };\n\n    this.info = truck => {\n      console.log('clicked');\n      this.setState({\n        selectedTruck: truck\n      });\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 10\n      }, this);\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      window.location.reload();\n    };\n\n    this.addEater = newEater => {\n      let reqPackage = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\" // 'Authorization': `Bearer ${localStorage.token}`\n\n        },\n        body: JSON.stringify(newEater)\n      };\n      fetch('http://localhost:3000/api/v1/eaters', reqPackage).then(res => res.json()).then(data => console.log(data));\n    };\n\n    this.reviewSubmit = (fields, truck) => {\n      let rating = parseInt(fields.rating);\n      let newReview = {\n        eater_id: this.state.currentEater.id,\n        truck_id: truck.id,\n        rating: rating,\n        body: fields.body\n      };\n      let reqPackage = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(newReview)\n      };\n      fetch('http://localhost:3000/api/v1/reviews', reqPackage).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error === \"Rating must be whole number between 1 and 5\") {\n          this.updateReviewError(data.error);\n        } else {\n          this.updateReviews(data);\n        }\n      });\n    };\n\n    this.updateReviews = data => {\n      let eater = this.state.currentEater;\n      eater.reviews = [...eater.reviews, data];\n      this.setState({\n        currentEater: eater,\n        reviewError: \"\"\n      });\n      this.getTrucks();\n    };\n\n    this.handleSearchTerm = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.sortByRating = e => {\n      let sortedTrucks = this.state.trucksArray.sort((a, b) => b.average_rating - a.average_rating);\n      this.setState({\n        trucksArray: sortedTrucks\n      });\n    };\n\n    this.filterByFavorite = e => {\n      let b = this.state.currentEater.favorites.map(favorite => favorite.truck_id);\n      let filteredTrucks = this.state.trucksArray.filter(truck => b.includes(truck.id));\n      this.setState({\n        trucksArray: filteredTrucks\n      });\n    };\n\n    this.filterByType = e => {\n      e.preventDefault();\n\n      if (e.target.value === \"Show All\") {\n        this.getTrucks();\n      } else {\n        // this.getTrucks()\n        let filteredTrucks = this.state.trucksArray.filter(truck => truck.type_of_food === e.target.value);\n        this.setState({\n          trucksArray: filteredTrucks\n        });\n      }\n    };\n\n    this.resetFilters = () => {\n      window.location.reload();\n    };\n  }\n\n  componentDidMount() {\n    console.log('mounted');\n    this.getTrucks();\n\n    if (localStorage.token != null) {\n      this.jwtAuth();\n    } // this.setUser(this.state.currentEater)\n\n  }\n\n  render() {\n    let filteredTrucks = this.state.trucksArray.filter(truck => truck.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [localStorage.token ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.logout(),\n        children: \"Log Out \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: localStorage.token ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(MainPage, {\n            handleLogIn: this.handleLogIn,\n            addEater: this.addEater\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/welcome\",\n          children: localStorage.token ? /*#__PURE__*/_jsxDEV(FrontPage, {\n            trucks: filteredTrucks,\n            eater: this.state.currentEater,\n            favorite: this.favorite,\n            unfavorite: this.unfavorite,\n            info: this.info,\n            search: this.handleSearchTerm,\n            sortByRating: this.sortByRating,\n            filterByType: this.filterByType,\n            filterByFavorite: this.filterByFavorite,\n            reset: this.resetFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 335\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/info\",\n          children: localStorage.token ? /*#__PURE__*/_jsxDEV(TruckPage, {\n            onSubmit: this.reviewSubmit,\n            eater: this.state.currentEater,\n            trucks: this.state.trucksArray,\n            error: this.state.reviewError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 167\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Coding/Phase-5-Project/food-truck-frontend/src/App.js"],"names":["MainPage","React","FrontPage","TruckPage","BrowserRouter","Router","Switch","Route","Link","Redirect","App","Component","state","trucksArray","currentEater","selectedTruck","searchTerm","reviewError","loginError","updateReviewError","data","setState","console","log","updateLoginError","jwtAuth","fetch","method","headers","localStorage","token","body","JSON","stringify","then","res","json","updateFavorites","eater","favorites","favorite","truck","trucks","getTrucks","newFavorite","eater_id","id","truck_id","reqPackage","unfavorite","b","filter","object","newArray","setUser","obj","parse","setTrucks","handleLogIn","e","preventDefault","username","target","value","password","error","updateReviews","info","logout","clear","window","location","reload","addEater","newEater","reviewSubmit","fields","rating","parseInt","newReview","reviews","handleSearchTerm","sortByRating","sortedTrucks","sort","a","average_rating","filterByFavorite","map","filteredTrucks","includes","filterByType","type_of_food","resetFilters","componentDidMount","render","name","toLowerCase"],"mappings":"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","sourcesContent":["import './App.css';\nimport MainPage from './Containers/MainPage'\nimport React from 'react';\nimport FrontPage from './Containers/FrontPage'\nimport TruckPage from './Containers/TruckPage'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  BrowserRouter,\n  Redirect,\n\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\nstate = {\n  trucksArray: [],\n  currentEater: {},\n  selectedTruck: {},\n  searchTerm: \"\",\n  reviewError: \"\",\n  loginError: \"\"\n}\n\nupdateReviewError = (data) => {\n  this.setState({\n    reviewError: data\n  })\n  console.log(data)\n}\n\nupdateLoginError = (data) => {\n  this.setState({\n    loginError: data\n  })\n  console.log(data)\n}\n\ncomponentDidMount() {\n  console.log('mounted')\n  this.getTrucks()\n  if (localStorage.token != null) {\n    this.jwtAuth()\n  }\n  \n  // this.setUser(this.state.currentEater)\n}\n\njwtAuth = () => {\n  fetch('http://localhost:3000/api/v1/token',{\n    method: 'POST',\n    headers: {\n      \"Content-Type\":\"application/json\",\n      \"Accept\":\"application/json\",\n      \"Authorization\": `Bearer ${localStorage.token}`\n    },\n    body: JSON.stringify(localStorage.token)\n  })\n  .then(res => res.json())\n  .then(data => this.setState({\n    currentEater: data\n  }))\n}\n\nupdateFavorites = (data) => {\n  let eater = this.state.currentEater\n  eater.favorites = [...eater.favorites, data]\n  this.setState({\n    currentEater: eater\n  })\n}\n\nfavorite = (truck) => {\n  let eater = this.state.currentEater\n  eater.trucks = [...eater.trucks, truck]\n  this.setState({\n    currentEater: eater\n  })\n  this.getTrucks()\n  let newFavorite = {\n    eater_id: this.state.currentEater.id,\n    truck_id: truck.id\n  }\n  let reqPackage = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(newFavorite)\n  }\n  console.log(reqPackage)\n  fetch('http://localhost:3000/api/v1/favorites', reqPackage)\n  .then(res => res.json())\n  .then(data => this.updateFavorites(data))\n}\n\nunfavorite = (truck) => {\n  let eater = this.state.currentEater\n  let b = eater.favorites.filter(object => object.truck_id === truck.id)[0]\n  let newArray = eater.favorites.filter(favorite => {\n    return favorite.truck_id != truck.id;\n  })\n  eater.favorites = newArray\n  this.setState({\n    currentEater: eater\n  })\n  fetch(`http://localhost:3000/api/v1/favorites/${b.id}`, {\n    method: \"DELETE\",\n  })\n}\n\nsetUser = (data) => {\n  let obj = JSON.parse(data)\n  this.setState({\n    currentEater: obj,\n  })\n  console.log(this.state.currentEater)\n}\n\nsetTrucks = (data) => {\n  this.setState({\n    trucksArray: data\n  })\n}\ngetTrucks = () => {\n  fetch('http://localhost:3000/api/v1/trucks', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${localStorage.token}`\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setTrucks(data))\n}\n\nhandleLogIn = (e) => {\n  console.log('login hit')\n  e.preventDefault()\n  let eater = {\n    username: e.target[0].value,\n    password: e.target[1].value\n  }\n\n  let reqPackage = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"\",\n    },\n    body: JSON.stringify(eater)\n  }\n\n  fetch('http://localhost:3000/api/v1/login', reqPackage)\n  .then(res => res.json())\n  .then(data => {\n    if (data.error===\"Incorrect username or password\") {\n      this.updateReviewError(data.error)\n    } else {\n      this.updateReviews(data)\n    }\n    localStorage.token = data.token\n    this.setUser(data.eater)\n    // this.getTrucks()\n  })\n}\n\ninfo = (truck) => {\n  console.log('clicked')\n  this.setState({\n    selectedTruck: truck\n  })\n  return <Link to='/info'/>\n}\n\nlogout = () => {\n  localStorage.clear()\n  window.location.reload()\n}\n\naddEater = (newEater) => {\n  let reqPackage = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      // 'Authorization': `Bearer ${localStorage.token}`\n    },\n    body: JSON.stringify(newEater)\n  }\n  fetch('http://localhost:3000/api/v1/eaters', reqPackage)\n  .then(res => res.json())\n  .then(data => console.log(data))\n}\n\nreviewSubmit = (fields, truck) => {\n  let rating = parseInt(fields.rating)\n  let newReview = {\n    eater_id: this.state.currentEater.id,\n    truck_id: truck.id,\n    rating: rating,\n    body: fields.body\n  }\n  let reqPackage = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(newReview)\n  }\n  fetch('http://localhost:3000/api/v1/reviews', reqPackage)\n  .then(res => res.json())\n  .then(data => {\n    console.log(data)\n    if (data.error===\"Rating must be whole number between 1 and 5\") {\n      this.updateReviewError(data.error)\n    } else {\n      this.updateReviews(data)\n    }\n  })\n}\n\nupdateReviews = (data) => {\n  let eater = this.state.currentEater\n  eater.reviews = [...eater.reviews, data]\n  this.setState({\n    currentEater: eater,\n    reviewError: \"\"\n  })\n  this.getTrucks()\n}\n\nhandleSearchTerm = (e) => {\n  this.setState({\n    searchTerm: e.target.value\n  })\n}\n\nsortByRating= (e) => {\n  let sortedTrucks = this.state.trucksArray.sort((a,b) => b.average_rating - a.average_rating)\n  this.setState({\n    trucksArray: sortedTrucks\n  })\n}\n\nfilterByFavorite = (e) => {\n  let b = this.state.currentEater.favorites.map(favorite => favorite.truck_id)\n  let filteredTrucks = this.state.trucksArray.filter(truck => b.includes(truck.id))\nthis.setState({\n  trucksArray: filteredTrucks\n})\n}\n\nfilterByType = (e) => {\n  e.preventDefault()\n  if (e.target.value === \"Show All\") {\n    this.getTrucks()\n  } else {\n    // this.getTrucks()\n    let filteredTrucks = this.state.trucksArray.filter(truck => truck.type_of_food === e.target.value)\n    this.setState({\n      trucksArray: filteredTrucks\n    })\n  }\n}\n\nresetFilters = () => {\n  window.location.reload()\n}\n  render() {\n    let filteredTrucks = this.state.trucksArray.filter(truck => truck.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  return (\n    <BrowserRouter>\n\n   {localStorage.token ? <button onClick={() =>this.logout()}>Log Out </button>: <h1>Login</h1>}\n    <Switch>\n      <Route exact path=\"/\">\n      {localStorage.token ? <Redirect to=\"/welcome\"/> : <MainPage handleLogIn={this.handleLogIn} addEater={this.addEater}/>}\n      </Route>\n      <Route exact path='/welcome'>\n      {localStorage.token ? <FrontPage trucks={filteredTrucks} eater={this.state.currentEater} favorite={this.favorite} unfavorite={this.unfavorite} info={this.info} search={this.handleSearchTerm} sortByRating={this.sortByRating} filterByType={this.filterByType} filterByFavorite={this.filterByFavorite} reset={this.resetFilters}/> : <Redirect to=\"/\"/>}\n      </Route>\n      <Route exact path='/info'>\n      {localStorage.token ? <TruckPage onSubmit={this.reviewSubmit} eater={this.state.currentEater} trucks={this.state.trucksArray} error={this.state.reviewError}/>: <Redirect to=\"/\"/>}\n      </Route>\n      {/* <Route path='/:handle' component={TruckPage}/> */}\n    </Switch>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}